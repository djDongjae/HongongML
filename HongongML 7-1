#패션 MNIST 불러오기
from tensorflow import keras
(train_input, train_target), (test_input, test_target) =\
  keras.datasets.fashion_mnist.load_data()
  
#전달받은 데이터 크기 확인하기
print(train_input.shape, train_target.shape)
print(test_input.shape, test_target.shape)

#그림으로 출력하여 샘플 확인하기
import matplotlib.pyplot as plt
fig, axs = plt.subplots(1, 10, figsize=(10,10))
for i in range(10):
  axs[i].imshow(train_input[i], cmap='gray_r')
  axs[i].axis('off')
plt.show()

#타깃값 확인하기
print([train_target[i] for i in range(10)])

#레이블당 샘플 개수 구하기
import numpy as np
print(np.unique(train_target, return_counts=True))

#이미지 전처리
train_scaled = train_input / 255.0
train_scaled = train_scaled.reshape(-1, 28*28)

#확률적 경사 하강법을 이용하여 데이터 훈련
from sklearn.model_selection import cross_validate
from sklearn.linear_model import SGDClassifier
sc = SGDClassifier(loss='log', max_iter=5, random_state=42)
scores = cross_validate(sc, train_scaled, train_target, n_jobs=-1)
print(np.mean(scores['test_score']))

#텐서플로 임포트
import tensorflow as tf

#케라스 임포트
from tensorflow import keras

#검증 세트 덜어내기
from sklearn.model_selection import train_test_split
train_scaled, val_scaled, train_target, val_target = train_test_split(train_scaled, train_target, test_size=0.2, random_state=42)

print(train_scaled.shape, train_target.shape)
print(val_scaled.shape, val_target.shape)

#밀집층 만들기
dense = keras.layers.Dense(10, activation='softmax', input_shape=(784,))

#신경망 모델 구현
model = keras.Sequential(dense)

#모델 훈련 전 설정
model.compile(loss='sparse_categorical_crossentropy', metrics='accuracy')

#모델 훈련하기
model.fit(train_scaled, train_target, epochs=5)

#모델 평가하기
model.evaluate(val_scaled, val_target)
